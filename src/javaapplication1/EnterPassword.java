
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


public class EnterPassword extends WizardPanel {
    
    private java.io.File outputDirectory;
    private String key;
    
    /** Creates new form SelectOutputFile */
    public EnterPassword(String stepText) {
        super(stepText);
        initComponents();
        setFirstFocusable(passwordField);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        selectFileLabel = new javax.swing.JLabel();
        selectFilePanel = new javax.swing.JPanel();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        decryptLabel = new javax.swing.JLabel();
        
        setLayout(new java.awt.BorderLayout());

        selectFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectFileLabel.setText("Enter the KEY and click next to start the extraction");
        selectFileLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2));
        add(selectFileLabel, java.awt.BorderLayout.NORTH);

        selectFilePanel.setLayout(new java.awt.BorderLayout());
         
        selectFilePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2));
        //selectFilePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2));
        selectFileLabel.setText("Enter the Key");
        decryptLabel.setText("    KEY    ");
        //passwordLabel.add(passwordField, java.awt.BorderLayout.WEST);
        selectFilePanel.add(decryptLabel, java.awt.BorderLayout.WEST);
        selectFilePanel.add(passwordField, java.awt.BorderLayout.CENTER);
  
        add(selectFilePanel, java.awt.BorderLayout.SOUTH);
        
        

    }//GEN-END:initComponents
    
    
    public boolean doValidation() {
        key = new String(passwordField.getPassword());
        
        
        if( key.trim().length() == 0 ){
            javax.swing.JOptionPane.showMessageDialog(this,"Enter a key");
            passwordField.requestFocus();
            return false;
        }
        
        //System.out.println("Key received from user:" +key);

        return true;
    }
    
    /** Getter for property outputDirectory.
     * @return Value of property outputDirectory.
     */
    public java.io.File getOutputDirectory() {
        return outputDirectory;
    }        
    
    
    /** Getter for property password.
     * @return Value of property password.
     */
    public String getPassword() {
        return key;
    }       
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel selectFileLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel passwordPanel;
    private javax.swing.JLabel decryptLabel;
    private javax.swing.JPanel selectFilePanel;
    // End of variables declaration//GEN-END:variables
    
}
